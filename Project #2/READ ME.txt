🛒 Project: Online Store Discount Calculator
⏳ Duration: ~2 hours
 👥 Group Size: 4
 🛠️ Concepts Used:
 ✅ if, if-else, elif statements
 ✅ Boolean logic & logical operators (and, or, not)
 ✅ Nested conditionals
 ✅ Ternary operators



📜 Project Breakdown
Each team member will complete one task. The tasks are designed to connect smoothly, so work together to ensure consistency.
Task 1: User Input & Order Details
📌 Goal: Collect the necessary details from the user.
 ✅ What to do:
Ask for the user’s name. If they don’t enter anything, print an error message and ask again.
Ask for their membership type (Regular, Premium, VIP).
If the input is invalid, display an error message and ask again.
Ask for the total amount spent at checkout.
If the input is not a positive number, display an error message and ask again.

Task 2: Apply Discounts Based on Membership
📌 Goal: Determine the discount based on membership type.
 ✅ What to do:
If VIP, apply 30% discount.
If Premium, apply 20% discount.
If Regular, apply 10% discount.
Store the discount percentage for later calculations.

Task 3: Extra Discounts for High Spenders
📌 Goal: Add extra discounts if the purchase is above certain amounts.
 ✅ What to do:
If the total amount spent is $500+, apply an additional 10% discount.
If the total amount spent is $200+, apply an additional 5% discount.
Use logical operators (and, or) to check conditions.
Store the extra discount percentage for later calculations.

Task 4: Final Price Calculation & Summary
📌 Goal: Calculate the final total and print a receipt.
 ✅ What to do:
Calculate total discount (membership + extra discount).
Compute the final price after applying the discount.
Print a receipt summarizing:
User’s name
Membership type
Total amount spent
Discounts applied
Final amount to pay
Print a final thank-you message.

🤝 Collaboration & Integration Guide
✔ Ensure consistent variable names (user_name, membership_type, total_spent, etc.).
 ✔ Each task depends on the previous one—test each section individually before merging.
 ✔ Use formatted strings (f-strings) for clear output.
 ✔ The person working on Task 4 should confirm that the receipt formatting is correct.

